def create_shortened_URL(user)
  puts "Type in your long url"
  long_url = gets.chomp
  if ShortenedUrl.exists?(long_url: long_url)
    short_url = ShortenedUrl.find_by_long_url(long_url)
  else
    short_url = User.create_for_user_and_long_url!(user, long_url)
  end
  puts "Short url is: #{short_url.short_url}"
end

def visit_shortened_url(user)
  begin
    puts "Type in the Shortened URL"
    short_url  = gets.chomp
    url =  ShortenedUrl.find_by_short_url(short_url)
  end while url.nil?

  Visit.record_visit!(user, url)
  Launchy.open( url.long_url)
end

def load_user(email)
  user = User.find_by_email(email)
  user.nil? ? User.create!(email: email) : user
end



puts "Input your email:"
email = gets.chomp
user = load_user(email)

puts "What do you want to do?"
puts "0. Create shortened URL"
puts "1. Visit shortened URL"
input = Integer(gets.chomp)
case input
when 0 then create_shortened_URL(user)
when 1 then visit_shortened_url(user)
end
